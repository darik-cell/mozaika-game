extend type Query {
    gameSessions: [GameSession]
    gameSession(id: ID!): GameSession
    getGameState(gameId: ID!): GameSession
}

extend type Mutation {
    newGameSession(playerId: ID!, difficulty: Difficulty!): GameSession
    startGame(difficulty: Difficulty!): GameSession
    updatePiecePosition(gameId: ID!, pieceId: ID!, newPosition: CoordinatesInput!): GameSession
}

type GameSession {
    id: ID!
    startTime: String!
    endTime: String
    duration: Int
    status: String!
    difficulty: Difficulty!
    remainingTime: Int
    player: Player
    pieces: [PuzzlePiece!]!
}

enum Difficulty {
    EASY
    MEDIUM
    HARD
}